/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

plugins {
  id 'elasticsearch.distro-test'
}

dependencies {
  api "junit:junit:3.8.1"
  api "org.hamcrest:hamcrest:2.1"
  api "com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.7.1"

  api "org.apache.httpcomponents:httpcore:4.4.12"
  api "org.apache.httpcomponents:httpclient:4.5.10"
  api "org.apache.httpcomponents:fluent-hc:4.5.10"
  api "org.apache.logging.log4j:log4j-api:2.11.1"
  api "org.apache.logging.log4j:log4j-core:2.11.1"
  api "org.apache.logging.log4j:log4j-jcl:2.11.1"
  api "commons-codec:commons-codec:1.12"
  api "commons-logging:commons-logging:1.2"

  api project(':libs:elasticsearch-core')

  testImplementation "com.fasterxml.jackson.core:jackson-annotations:2.10.4"
  testImplementation "com.fasterxml.jackson.core:jackson-core:2.10.4"
  testImplementation "com.fasterxml.jackson.core:jackson-databind:2.10.4"
}

tasks.named('forbiddenApisTest').configure {
  replaceSignatureFiles 'jdk-signatures'
}

// we don't have additional tests for the tests themselves
tasks.test.enabled = false
// Tests are destructive and meant to run in a VM, they don't adhere to general conventions
testingConventions.enabled = false

// this project doesn't get published
tasks.named("dependencyLicenses").configure { it.enabled = false }
tasks.dependenciesInfo.enabled = false

tasks.thirdPartyAudit.ignoreMissingClasses()

tasks.register('destructivePackagingTest') {
  dependsOn 'destructiveDistroTest'
}

subprojects { Project platformProject ->
  tasks.register('packagingTest') {
    dependsOn 'distroTest'
  }

  vagrant {
    hostEnv 'VAGRANT_PROJECT_DIR', platformProject.projectDir.absolutePath
  }
}
